<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace TimepadApi\models;

use \ArrayAccess;

class QuestionInclude implements ArrayAccess {
    static $swaggerTypes = array(
        'field_id' => 'string',
        'is_mandatory' => 'bool',
        'status' => 'string',
        'name' => 'string',
        'comment' => 'string',
        'type' => 'string',
        'possible_answers' => 'string[]'
    );

    static $attributeMap = array(
        'field_id' => 'field_id',
        'is_mandatory' => 'is_mandatory',
        'status' => 'status',
        'name' => 'name',
        'comment' => 'comment',
        'type' => 'type',
        'possible_answers' => 'possible_answers'
    );

    
    /**
    * Текстовый идентификатор для стандартных вопросов
    *
    * @var string
    */
    public $field_id;
    /**
    * Обязателен ли вопрос:
    *
    * @var bool
    */
    public $is_mandatory;
    /**
    * Статус вопроса
    *
    * @var string
    */
    public $status;
    /**
    * Текст вопроса
    *
    * @var string
    */
    public $name;
    /**
    * Подсказка под вопросом
    *
    * @var string
    */
    public $comment;
    /**
    * Тип вопроса
    *
    * @var string
    */
    public $type;
    /**
    * Список ответов на вопрос
    *
    * @var string[]
    */
    public $possible_answers;

    public function __construct(array $data = null) {
    
        if(isset($data["field_id"])) {
            $this->field_id = $data["field_id"];
        }
    
    
        if(isset($data["is_mandatory"])) {
            $this->is_mandatory = $data["is_mandatory"];
        }
    
    
        if(isset($data["status"])) {
            $this->status = $data["status"];
        }
    
    
        if(isset($data["name"])) {
            $this->name = $data["name"];
        }
    
    
        if(isset($data["comment"])) {
            $this->comment = $data["comment"];
        }
    
    
        if(isset($data["type"])) {
            $this->type = $data["type"];
        }
    
    
        if(isset($data["possible_answers"])) {
            $this->possible_answers = $data["possible_answers"];
        }
    
    }

    public function offsetExists($offset) {
        return isset($this->$offset);
    }

    public function offsetGet($offset) {
        return $this->$offset;
    }

    public function offsetSet($offset, $value) {
        $this->$offset = $value;
    }

    public function offsetUnset($offset) {
        unset($this->$offset);
    }
}
