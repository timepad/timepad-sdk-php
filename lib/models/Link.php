<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace TimepadApi\models;

use \ArrayAccess;

class Link implements ArrayAccess {
  static $swaggerTypes = array(
      'name' => 'string',
      'title' => 'string',
      'href' => 'string',
      'templated' => 'bool'
  );

  static $attributeMap = array(
      'name' => 'name',
      'title' => 'title',
      'href' => 'href',
      'templated' => 'templated'
  );

  
  /**
  * Машиночитаемое описание ссылки (для оплат - строковый id платёжки)
  */
  public $name; /* string */
  /**
  * Человекочитаемое описание ссылки (для оплат - название платёжки)
  */
  public $title; /* string */
  /**
  * Ссылка
  */
  public $href; /* string */
  /**
  * Признак того, что ссылка - шаблон. У curies - true, в остальных случаях не присутствует
  */
  public $templated; /* bool */

  public function __construct(array $data = null) {
    
    if(isset($data["name"])) {
      $this->name = $data["name"];
    }
    
    
    if(isset($data["title"])) {
      $this->title = $data["title"];
    }
    
    
    if(isset($data["href"])) {
      $this->href = $data["href"];
    }
    
    
    if(isset($data["templated"])) {
      $this->templated = $data["templated"];
    }
    
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
