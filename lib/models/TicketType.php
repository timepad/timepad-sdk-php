<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace TimepadApi\models;

use \ArrayAccess;

class TicketType implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'int',
      'name' => 'string',
      'buy_amount_min' => 'number',
      'buy_amount_max' => 'number',
      'price' => 'number',
      'is_promocode_locked' => 'boolean',
      'remaining' => 'int',
      'sale_ends_at' => 'date',
      'public_key' => 'string',
      'is_active' => 'boolean',
      'ad_partner_profit' => 'number'
  );

  static $attributeMap = array(
      'id' => 'id',
      'name' => 'name',
      'buy_amount_min' => 'buy_amount_min',
      'buy_amount_max' => 'buy_amount_max',
      'price' => 'price',
      'is_promocode_locked' => 'is_promocode_locked',
      'remaining' => 'remaining',
      'sale_ends_at' => 'sale_ends_at',
      'public_key' => 'public_key',
      'is_active' => 'is_active',
      'ad_partner_profit' => 'ad_partner_profit'
  );

  
  /**
  * Уникальный номер типа билета
  */
  public $id; /* int */
  /**
  * Название типа билета
  */
  public $name; /* string */
  /**
  * Минимальное количество билетов в одной покупке
  */
  public $buy_amount_min; /* number */
  /**
  * Максимальное количество билетов в одной покупке
  */
  public $buy_amount_max; /* number */
  /**
  * Цена билета
  */
  public $price; /* number */
  /**
  * Закрыт ли этот тип введённым промокодом
  */
  public $is_promocode_locked; /* boolean */
  /**
  * Сколько билетов осталось
  */
  public $remaining; /* int */
  /**
  * Дата окончания продажи этого типа билета
  */
  public $sale_ends_at; /* date */
  /**
  * Публичный ключ для расшифровки QR-кода билета этого типа
  */
  public $public_key; /* string */
  /**
  * Активность типа билета
  */
  public $is_active; /* boolean */
  /**
  * Партнёрская прибыль
  */
  public $ad_partner_profit; /* number */

  public function __construct(array $data = null) {
    
    if(isset($data["id"])) {
      $this->id = $data["id"];
    }
    
    
    if(isset($data["name"])) {
      $this->name = $data["name"];
    }
    
    
    if(isset($data["buy_amount_min"])) {
      $this->buy_amount_min = $data["buy_amount_min"];
    }
    
    
    if(isset($data["buy_amount_max"])) {
      $this->buy_amount_max = $data["buy_amount_max"];
    }
    
    
    if(isset($data["price"])) {
      $this->price = $data["price"];
    }
    
    
    if(isset($data["is_promocode_locked"])) {
      $this->is_promocode_locked = $data["is_promocode_locked"];
    }
    
    
    if(isset($data["remaining"])) {
      $this->remaining = $data["remaining"];
    }
    
    
    if(isset($data["sale_ends_at"])) {
      $this->sale_ends_at = $data["sale_ends_at"];
    }
    
    
    if(isset($data["public_key"])) {
      $this->public_key = $data["public_key"];
    }
    
    
    if(isset($data["is_active"])) {
      $this->is_active = $data["is_active"];
    }
    
    
    if(isset($data["ad_partner_profit"])) {
      $this->ad_partner_profit = $data["ad_partner_profit"];
    }
    
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
