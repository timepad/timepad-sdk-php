<?php
/**
 *  Copyright 2015 Reverb Technologies, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

namespace TimepadApi\models;

use \ArrayAccess;

class RegistrationOrderResponse implements ArrayAccess {
  static $swaggerTypes = array(
      'id' => 'int',
      'created_at' => 'DateTime',
      'status' => 'OrderStatusResponse',
      'payment' => 'PaymentResponse',
      'tickets' => 'array[TicketResponse]',
      'answers' => 'AnswersResponse',
      'promocodes' => 'array[string]'
  );

  static $attributeMap = array(
      'id' => 'id',
      'created_at' => 'created_at',
      'status' => 'status',
      'payment' => 'payment',
      'tickets' => 'tickets',
      'answers' => 'answers',
      'promocodes' => 'promocodes'
  );

  
  /**
  * Уникальный номер события
  */
  public $id; /* int */
  /**
  * Дата создания заказа
  */
  public $created_at; /* DateTime */
  /**
  * Дата создания заказа
  */
  public $status; /* OrderStatusResponse */
  /**
  * Объект информации о платеже
  */
  public $payment; /* PaymentResponse */
  /**
  * Список регистраций
  */
  public $tickets; /* array[TicketResponse] */
  /**
  * Массив Ответов
  */
  public $answers; /* AnswersResponse */
  /**
  * Список промокодов
  */
  public $promocodes; /* array[string] */

  public function __construct(array $data = null) {
    
    if(isset($data["id"])) {
      $this->id = $data["id"];
    }
    
    
    if(isset($data["created_at"])) {
      $this->created_at = $data["created_at"];
    }
    
    
    if(isset($data["status"])) {
      $this->status = $data["status"];
    }
    
    
    if(isset($data["payment"])) {
      $this->payment = $data["payment"];
    }
    
    
    if(isset($data["tickets"])) {
      $this->tickets = $data["tickets"];
    }
    
    
    if(isset($data["answers"])) {
      $this->answers = $data["answers"];
    }
    
    
    if(isset($data["promocodes"])) {
      $this->promocodes = $data["promocodes"];
    }
    
  }

  public function offsetExists($offset) {
    return isset($this->$offset);
  }

  public function offsetGet($offset) {
    return $this->$offset;
  }

  public function offsetSet($offset, $value) {
    $this->$offset = $value;
  }

  public function offsetUnset($offset) {
    unset($this->$offset);
  }
}
